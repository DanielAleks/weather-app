[{"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\index.tsx":"1","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\App.tsx":"2","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\reportWebVitals.ts":"3","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\reusables\\DynamicStuff.tsx":"4","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\navbar\\Navbar.tsx":"5","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\hourly\\Hourly.tsx":"6","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\index.tsx":"7","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\daily\\Daily.tsx":"8","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\current\\Current.tsx":"9","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\reusables\\DynHourly.tsx":"10","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\hourly\\overview\\OverviewData.tsx":"11","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\hourly\\overview\\more\\MoreData.tsx":"12","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\daily\\info\\DailyInfo.tsx":"13","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\current\\info\\CurrentInfo.tsx":"14","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\current\\info\\CurrentTitle.tsx":"15","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\current\\circle\\Circle.tsx":"16","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\top-section\\search-bar\\SearchBar.tsx":"17","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\top-section\\image-section\\ImageSection.tsx":"18","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\navbar\\resultions\\MobileNav.tsx":"19","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\navbar\\resultions\\DesktopNav.tsx":"20"},{"size":500,"mtime":1607295698333,"results":"21","hashOfConfig":"22"},{"size":236,"mtime":1612089669291,"results":"23","hashOfConfig":"22"},{"size":425,"mtime":1607295698333,"results":"24","hashOfConfig":"22"},{"size":401,"mtime":1610944223961,"results":"25","hashOfConfig":"22"},{"size":1458,"mtime":1612173099062,"results":"26","hashOfConfig":"22"},{"size":1949,"mtime":1612170791333,"results":"27","hashOfConfig":"22"},{"size":2387,"mtime":1611966984086,"results":"28","hashOfConfig":"22"},{"size":1772,"mtime":1611989395136,"results":"29","hashOfConfig":"22"},{"size":1731,"mtime":1611980482622,"results":"30","hashOfConfig":"22"},{"size":1334,"mtime":1612000845778,"results":"31","hashOfConfig":"22"},{"size":1431,"mtime":1612060587098,"results":"32","hashOfConfig":"22"},{"size":1611,"mtime":1612059090143,"results":"33","hashOfConfig":"22"},{"size":778,"mtime":1611990900300,"results":"34","hashOfConfig":"22"},{"size":1152,"mtime":1611980486759,"results":"35","hashOfConfig":"22"},{"size":631,"mtime":1611991432503,"results":"36","hashOfConfig":"22"},{"size":589,"mtime":1611979899396,"results":"37","hashOfConfig":"22"},{"size":1492,"mtime":1611976572070,"results":"38","hashOfConfig":"22"},{"size":1799,"mtime":1612091676675,"results":"39","hashOfConfig":"22"},{"size":1239,"mtime":1612174920540,"results":"40","hashOfConfig":"22"},{"size":726,"mtime":1612173085452,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"djguxm",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"44"},"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\index.tsx",[],["91","92"],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\App.tsx",[],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\reportWebVitals.ts",[],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\reusables\\DynamicStuff.tsx",[],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\navbar\\Navbar.tsx",["93"],"import React, { useLayoutEffect, useState } from 'react'\r\nimport { BsCloud } from 'react-icons/bs'\r\nimport './x-nav.sass'\r\nimport MobileNav from './resultions/MobileNav';\r\nimport DesktopNav from './resultions/DesktopNav';\r\n\r\nfunction useWindowSize() {\r\n  const [size, setSize] = useState([0, 0])\r\n\r\n  useLayoutEffect(() => {\r\n    function updateSize() {\r\n      setSize([window.innerWidth, window.innerHeight]);\r\n    }\r\n    window.addEventListener('resize', updateSize);\r\n    updateSize();\r\n    return () => window.removeEventListener('resize', updateSize);\r\n  }, [])\r\n\r\n  return size;\r\n}\r\n\r\nfunction Navbar(props) {\r\n  const [width, height] = useWindowSize();\r\n  const [linkModal, setLinkModal] = useState(false);\r\n\r\n  const close = () => setLinkModal(false)\r\n\r\n  return (\r\n    <div className=\"navBar\">\r\n      <div className='project-restrictions'>\r\n        <div className='nav-items'>\r\n          <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            <BsCloud\r\n              strokeWidth='.5'\r\n              color='#971414'\r\n              size={width < 500 ? 20 : 25}\r\n            />\r\n            <p className='nav-header'>QuickWeather</p>\r\n          </div>\r\n\r\n          <MobileNav\r\n            width={width}\r\n            close={close}\r\n            linkModal={linkModal}\r\n            setLinkModal={setLinkModal}\r\n          />\r\n\r\n          <DesktopNav width={width} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\hourly\\Hourly.tsx",["94","95"],"import React, { useEffect, useState } from 'react'\r\nimport { Day, DaySelected } from '../../../reusables/DynHourly';\r\nimport './x-hourly.sass'\r\n\r\nfunction Hourly({ YOUR_API_KEY }) {\r\n  const [weatherLocationToday, setWeatherLocationToday]: any = useState([])\r\n  const [weatherLocationTom, setWeatherLocationTom]: any = useState([])\r\n  const [weatherLocationNext, setWeatherLocationNext]: any = useState([])\r\n  const [weatherLocationDate, setWeatherLocationDate]: any = useState([])\r\n  const [listOpenById, setListOpenById] = useState<number>(null)\r\n  const [accessor, setAccessor] = useState(0)\r\n\r\n  const weekThree = `http://api.weatherapi.com/v1/forecast.json?key=${YOUR_API_KEY}&q=07112&days=7`\r\n\r\n  async function weather() {\r\n    const fetchedWeather = await fetch(weekThree)\r\n    const data = await fetchedWeather.json()\r\n    setWeatherLocationToday(data.forecast.forecastday[0].hour)\r\n    setWeatherLocationTom(data.forecast.forecastday[1].hour)\r\n    setWeatherLocationNext(data.forecast.forecastday[2].hour)\r\n    setWeatherLocationDate(data.forecast.forecastday[accessor].date)\r\n  }\r\n\r\n  useEffect(() => {\r\n    weather()\r\n  }, [])\r\n\r\n  const dayData = [\r\n    { state: weatherLocationToday, number: 0 },\r\n    { state: weatherLocationTom, number: 1 },\r\n    { state: weatherLocationNext, number: 2 }\r\n  ]\r\n\r\n  const selData = [\r\n    { day: 'Today', number: 0 },\r\n    { day: 'Tomorrow', number: 1 },\r\n    { day: 'Day After', number: 2 },\r\n  ]\r\n\r\n  return (\r\n    <div id='Hourly'>\r\n      <div className='hourlyContainerOuter'>\r\n        {selData.map((item) =>\r\n          <DaySelected\r\n            selData={item}\r\n            setAccessor={setAccessor}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      {dayData.map((item) =>\r\n        <Day\r\n          dayData={item}\r\n          accessor={accessor}\r\n          setListOpenById={setListOpenById}\r\n          listOpenById={listOpenById}\r\n        />\r\n      )}\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default Hourly\r\n","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\index.tsx",["96","97","98"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport Navbar from './navbar/Navbar';\r\nimport Current from './weather-info/current/Current';\r\nimport Daily from './weather-info/daily/Daily';\r\nimport Hourly from './weather-info/hourly/Hourly';\r\nimport SearchBar from './top-section/search-bar/SearchBar';\r\nimport ImageSection from './top-section/image-section/ImageSection';\r\nimport './index.sass'\r\nimport './top-section/search-bar/x-search.sass'\r\nimport './top-section/search-bar/x-dropdown-menu.sass'\r\n\r\nfunction Index() {\r\n  const [city, setCity]: any = useState('New York')\r\n  const [weatherLocation, setWeatherLocation]: any = useState([])\r\n  const [weatherCurrent, setWeatherCurrent]: any = useState([])\r\n  const [area, setArea]: any = useState([])\r\n  const [isModal, setIsModal] = useState(true)\r\n\r\n  const YOUR_API_KEY = '32902a43900f400cae0210316210701'\r\n  const commonNames = `http://api.weatherapi.com/v1/search.json?key=${YOUR_API_KEY}&q=${city}`\r\n  const current = `http://api.weatherapi.com/v1/current.json?key=${YOUR_API_KEY}&q=${city}`\r\n\r\n  async function weather() {\r\n    const fetchedWeatherData = await fetch(current)\r\n    const data = await fetchedWeatherData.json()\r\n    setWeatherLocation(data.location)\r\n    setWeatherCurrent(data.current)\r\n    console.log(data, 'weather')\r\n  }\r\n\r\n  async function places() {\r\n    const fetchedWeatherData = await fetch(commonNames)\r\n    const data = await fetchedWeatherData.json()\r\n    // const dataConcatenated = data.concat{}\r\n    setArea(data)\r\n    console.log(data, 'places')\r\n  }\r\n\r\n  useEffect(() => {\r\n    weather()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    places()\r\n  }, [city])\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n\r\n      <div className=\"project-container\">\r\n        <ImageSection\r\n          city={city}\r\n          weatherLocation={weatherLocation}\r\n          weatherCurrent={weatherCurrent}\r\n        />\r\n\r\n        <SearchBar\r\n          area={area}\r\n          city={city}\r\n          weather={weather}\r\n          setCity={setCity}\r\n          isModal={isModal}\r\n          setIsModal={setIsModal}\r\n        />\r\n\r\n        {/* //* TODAY */}\r\n        <Current city={city} YOUR_API_KEY={YOUR_API_KEY} />\r\n        {/* //*DAILY */}\r\n        <Daily YOUR_API_KEY={YOUR_API_KEY} />\r\n        {/* //*HOURLY */}\r\n        <Hourly YOUR_API_KEY={YOUR_API_KEY} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Index\r\n","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\daily\\Daily.tsx",["99"],"import React, { useEffect, useState } from 'react'\r\nimport { BsCloud } from 'react-icons/bs'\r\nimport DailyInfo from './info/DailyInfo'\r\nimport './x-daily.sass'\r\n\r\nfunction Daily({ YOUR_API_KEY }) {\r\n  const [weatherForecast, setWeatherForecast]: any = useState([])\r\n\r\n  const weekThree = `http://api.weatherapi.com/v1/forecast.json?key=${YOUR_API_KEY}&q=07112&days=7`\r\n\r\n  async function weather() {\r\n    const fetchedWeatherData = await fetch(weekThree)\r\n    const data = await fetchedWeatherData.json()\r\n    setWeatherForecast(data.forecast.forecastday)\r\n  }\r\n\r\n  // let days = ['']\r\n\r\n  // const locale = {\r\n  //   localize: {\r\n  //     month: n => months[n],\r\n  //     day: n => days[n]\r\n  //   }\r\n  // }\r\n  // let c = locale.getInstance()\r\n  // let closer = c.setTime(23 / 2 / 2010);\r\n  // let me = closer.get(Calendar.DAY_OF_WEEK);\r\n\r\n\r\n  // let days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n  // let d = new Date(weatherForecast.date);\r\n  // let dayName = days[d.getDay()]\r\n  // console.log(dayName, 'dayName')\r\n  // console.log(d, 'd')\r\n\r\n\r\n  useEffect(() => {\r\n    weather()\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className='daily-position' id='Daily'>\r\n      <p className='daily-top-header'>The Next Three Days...</p>\r\n\r\n      <div className='daily-outer-container'>\r\n        {weatherForecast && weatherForecast.map((item) =>\r\n          <div className='daily-container'>\r\n            <div className='daily-header'>\r\n              <p className='daily-date'>{item.date}</p>\r\n              <BsCloud color='white' size={40} />\r\n              <p>{item.day.condition.text}</p>\r\n            </div>\r\n\r\n            <DailyInfo item={item} />\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Daily\r\n","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\current\\Current.tsx",["100","101","102"],"import React, { useEffect, useState } from 'react'\r\nimport CurrentTitle from './info/CurrentTitle'\r\nimport { BsCloud } from 'react-icons/bs'\r\nimport './x-current.sass'\r\nimport CurrentInfo from './info/CurrentInfo'\r\nimport Circle from './circle/Circle'\r\n\r\nfunction Current({ YOUR_API_KEY, city }) {\r\n  const [weatherCurrent, setWeatherCurrent]: any = useState([])\r\n  const [weatherForcast, setWeatherForcast]: any = useState([])\r\n  const [weatherPhase, setWeatherPhase]: any = useState([])\r\n \r\n  const current = `http://api.weatherapi.com/v1/current.json?key=${YOUR_API_KEY}&q=${city}`\r\n  const weekThree = `http://api.weatherapi.com/v1/forecast.json?key=${YOUR_API_KEY}&q=07112&days=7`\r\n\r\n  async function weather() {\r\n    const fetchedWeatherData = await fetch(current)\r\n    const data = await fetchedWeatherData.json()\r\n    setWeatherCurrent(data.current)\r\n  }\r\n\r\n  async function weather2nd() {\r\n    const fetchedWeatherData = await fetch(weekThree)\r\n    const data = await fetchedWeatherData.json()\r\n    setWeatherForcast(data.forecast.current)\r\n    setWeatherPhase(data.forecast.forecastday[0].astro)\r\n  }\r\n\r\n  useEffect(() => {\r\n    weather()\r\n    weather2nd()\r\n  }, [])\r\n\r\n  return (\r\n\r\n    <div className='current-section' id='Today'>\r\n      <Circle weatherCurrent={weatherCurrent} />\r\n \r\n      <div className='current-container'> \r\n        <p className='current-header'>Today</p>\r\n        <div className='current-info'>\r\n          <CurrentTitle />\r\n\r\n          <CurrentInfo\r\n            weatherCurrent={weatherCurrent}\r\n            weatherPhase={weatherPhase}\r\n          />\r\n          {/* //? weatherCurrent.description is commented in both */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Current\r\n","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\reusables\\DynHourly.tsx",[],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\hourly\\overview\\OverviewData.tsx",[],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\hourly\\overview\\more\\MoreData.tsx",[],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\daily\\info\\DailyInfo.tsx",[],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\current\\info\\CurrentInfo.tsx",[],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\current\\info\\CurrentTitle.tsx",[],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\current\\circle\\Circle.tsx",[],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\top-section\\search-bar\\SearchBar.tsx",["103","104"],"import React, { useEffect, useRef } from 'react'\r\nimport './x-search.sass'\r\n\r\nfunction ImageSection({ weather, setCity, setIsModal, city, area, isModal }) {\r\n  const inputRef = useRef()\r\n  const buttonRef = useRef()\r\n\r\n  const focusButton = (buttonRef) => {\r\n    buttonRef.current.focus()\r\n    setIsModal(false)\r\n  }\r\n\r\n  const focusInput = (inputRef) => {\r\n    inputRef.current.focus()\r\n    setIsModal(true)\r\n  }\r\n\r\n  useEffect(() => {\r\n    focusInput(inputRef)\r\n  }, [])\r\n\r\n  return (\r\n    <div className='search-container' >\r\n      <div className='button--input'>\r\n        <input\r\n          type=\"text\"\r\n          value={city}\r\n          ref={inputRef}\r\n          onClick={() => setIsModal(true)}\r\n          className='long-input'\r\n          placeholder='enter city' \r\n          onChange={(e) => setCity(e.target.value)}\r\n        />\r\n        <button ref={buttonRef} onClick={() => {\r\n          weather()\r\n        }}>search</button>\r\n      </div>\r\n\r\n      {/* {area.length <= 3 &&\r\n        <p className='error-length'>not enough letters</p>}\r\n\r\n      <div className='input-dropdown'>\r\n        {area.length >= 3 && isModal &&\r\n          area.map((item) =>\r\n            <div onClick={() => {\r\n              weather()\r\n              setCity(item.name)\r\n              focusButton(buttonRef)\r\n            }}\r\n              className='possible-locations-btn'>\r\n              {item.name}\r\n            </div>\r\n          )} */}\r\n    {/* </div> */}\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default ImageSection","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\top-section\\image-section\\ImageSection.tsx",["105"],"import React, { useEffect, useState } from 'react'\r\nimport './x-imgSection.sass'\r\n\r\nfunction SearchBar({ weatherLocation, weatherCurrent, city }) {\r\n  const [imageDisplay, setImageDisplay]: any = useState([])\r\n\r\n  async function placesImage() {\r\n    const apikey = 'AIzaSyB2xvlwMVlw0xW0C1hL_0A8-lNotiNRClM'\r\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\n    // const client = 'UY21H3DQEWPDQHH23GN43VXGTQUMNHWZLON5HJP5TXGNJK2L'\r\n    // const secret = '05HJZRAZCZXJV0WHPWOKM5TOANHEYUOLAFJHDRX5ZXUH1GZD'\r\n    // const placeHttp = `https://api.foursquare.com/v2/venues/explore/?near=Shibuya&venuePhotos=1&section=food&client_id=${client}&client_secret=${secret}&v=20131124`\r\n    const placesHttp = `https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photoreference=CnRvAAAAwMpdHeWlXl-lH0vp7lez4znKPIWSWvgvZFISdKx45AwJVP1Qp37YOrH7sqHMJ8C-vBDC546decipPHchJhHZL94RcTUfPa1jWzo-rSHaTlbNtjh-N68RkcToUCuY9v2HNpo5mziqkir37WU8FJEqVBIQ4k938TI3e7bf8xq-uwDZcxoUbO_ZJzPxremiQurAYzCTwRhE_V0&sensor=false&key=${apikey}`\r\n    const fetchedWeather = await fetch(placesHttp)\r\n    const data = await fetchedWeather.json()\r\n    setImageDisplay(data)\r\n    console.log(data)\r\n  }\r\n\r\n  useEffect(() => {\r\n    placesImage()\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"top-image\">\r\n      <div className=\"image-bg\">  \r\n        <img src={imageDisplay} alt=\"\" />\r\n        {/* {imageDisplay} */}\r\n        <div className='top-container'>\r\n          <p className='top-name'>{weatherLocation && weatherLocation.name}</p>\r\n          <p className='top-local'>{weatherLocation && weatherLocation.localtime}</p>\r\n          <p className='top-temp'>{weatherCurrent && weatherCurrent.temp_f}F°</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBar\r\n","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\navbar\\resultions\\MobileNav.tsx",["106"],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\navbar\\resultions\\DesktopNav.tsx",["107"],"import React from 'react'\r\nimport { Link, animateScroll as scroll } from \"react-scroll\";\r\n\r\nfunction DesktopNav({ width }) {\r\n  return (\r\n    <>\r\n      {width > 700 &&\r\n        <div className='buttonContainer'>\r\n          <Link className='scroll-link' to=\"Today\" spy={true} smooth={true} offset={-100} duration={500}>\r\n            Today\r\n            </Link>\r\n          <Link className='scroll-link' to=\"Hourly\" spy={true} smooth={true} offset={-100} duration={500}>\r\n            Hourly\r\n            </Link>\r\n          <Link className='scroll-link' to=\"Daily\" spy={true} smooth={true} offset={-250} duration={500}>\r\n            Daily\r\n            </Link>\r\n        </div>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DesktopNav\r\n",{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":23,"column":17,"nodeType":"114","messageId":"115","endLine":23,"endColumn":23},{"ruleId":"112","severity":1,"message":"116","line":9,"column":10,"nodeType":"114","messageId":"115","endLine":9,"endColumn":29},{"ruleId":"117","severity":1,"message":"118","line":26,"column":6,"nodeType":"119","endLine":26,"endColumn":8,"suggestions":"120"},{"ruleId":"112","severity":1,"message":"121","line":1,"column":28,"nodeType":"114","messageId":"115","endLine":1,"endColumn":34},{"ruleId":"117","severity":1,"message":"118","line":41,"column":6,"nodeType":"119","endLine":41,"endColumn":8,"suggestions":"122"},{"ruleId":"117","severity":1,"message":"123","line":45,"column":6,"nodeType":"119","endLine":45,"endColumn":12,"suggestions":"124"},{"ruleId":"117","severity":1,"message":"118","line":39,"column":6,"nodeType":"119","endLine":39,"endColumn":8,"suggestions":"125"},{"ruleId":"112","severity":1,"message":"126","line":3,"column":10,"nodeType":"114","messageId":"115","endLine":3,"endColumn":17},{"ruleId":"112","severity":1,"message":"127","line":10,"column":10,"nodeType":"114","messageId":"115","endLine":10,"endColumn":24},{"ruleId":"117","severity":1,"message":"128","line":32,"column":6,"nodeType":"119","endLine":32,"endColumn":8,"suggestions":"129"},{"ruleId":"112","severity":1,"message":"130","line":8,"column":9,"nodeType":"114","messageId":"115","endLine":8,"endColumn":20},{"ruleId":"117","severity":1,"message":"131","line":20,"column":6,"nodeType":"119","endLine":20,"endColumn":8,"suggestions":"132"},{"ruleId":"112","severity":1,"message":"133","line":9,"column":11,"nodeType":"114","messageId":"115","endLine":9,"endColumn":19},{"ruleId":"112","severity":1,"message":"134","line":3,"column":33,"nodeType":"114","messageId":"115","endLine":3,"endColumn":39},{"ruleId":"112","severity":1,"message":"134","line":2,"column":33,"nodeType":"114","messageId":"115","endLine":2,"endColumn":39},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"@typescript-eslint/no-unused-vars","'height' is assigned a value but never used.","Identifier","unusedVar","'weatherLocationDate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'weather'. Either include it or remove the dependency array.","ArrayExpression",["137"],"'useRef' is defined but never used.",["138"],"React Hook useEffect has a missing dependency: 'places'. Either include it or remove the dependency array.",["139"],["140"],"'BsCloud' is defined but never used.","'weatherForcast' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'weather' and 'weather2nd'. Either include them or remove the dependency array.",["141"],"'focusButton' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'focusInput'. Either include it or remove the dependency array.",["142"],"'proxyurl' is assigned a value but never used.","'scroll' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},{"desc":"143","fix":"145"},{"desc":"146","fix":"147"},{"desc":"143","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},"Update the dependencies array to be: [weather]",{"range":"153","text":"154"},{"range":"155","text":"154"},"Update the dependencies array to be: [city, places]",{"range":"156","text":"157"},{"range":"158","text":"154"},"Update the dependencies array to be: [weather, weather2nd]",{"range":"159","text":"160"},"Update the dependencies array to be: [focusInput]",{"range":"161","text":"162"},[1135,1137],"[weather]",[1599,1601],[1646,1652],"[city, places]",[1132,1134],[1173,1175],"[weather, weather2nd]",[469,471],"[focusInput]"]