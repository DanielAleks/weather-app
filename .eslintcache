[{"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\index.tsx":"1","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\App.tsx":"2","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\reportWebVitals.ts":"3","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\reusables\\DynamicStuff.tsx":"4","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\navbar\\Navbar.tsx":"5","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\hourly\\Hourly.tsx":"6","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\index.tsx":"7","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\daily\\Daily.tsx":"8","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\current\\Current.tsx":"9","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\reusables\\DynHourly.tsx":"10","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\hourly\\overview\\OverviewData.tsx":"11","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\hourly\\overview\\more\\MoreData.tsx":"12","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\daily\\info\\DailyInfo.tsx":"13","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\current\\info\\CurrentInfo.tsx":"14","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\current\\info\\CurrentTitle.tsx":"15","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\current\\circle\\Circle.tsx":"16","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\top-section\\search-bar\\SearchBar.tsx":"17","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\top-section\\image-section\\ImageSection.tsx":"18","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\navbar\\resultions\\MobileNav.tsx":"19","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\navbar\\resultions\\DesktopNav.tsx":"20","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\pineapples\\PineApples.tsx":"21"},{"size":500,"mtime":1607295698333,"results":"22","hashOfConfig":"23"},{"size":174,"mtime":1613303619785,"results":"24","hashOfConfig":"23"},{"size":425,"mtime":1607295698333,"results":"25","hashOfConfig":"23"},{"size":401,"mtime":1610944223961,"results":"26","hashOfConfig":"27"},{"size":1455,"mtime":1614067352987,"results":"28","hashOfConfig":"23"},{"size":2000,"mtime":1613694273236,"results":"29","hashOfConfig":"23"},{"size":2254,"mtime":1614071415580,"results":"30","hashOfConfig":"23"},{"size":1505,"mtime":1614068911538,"results":"31","hashOfConfig":"23"},{"size":1787,"mtime":1613694134611,"results":"32","hashOfConfig":"23"},{"size":1163,"mtime":1614071365307,"results":"33","hashOfConfig":"23"},{"size":1567,"mtime":1613526023645,"results":"34","hashOfConfig":"23"},{"size":1659,"mtime":1613526529034,"results":"35","hashOfConfig":"23"},{"size":798,"mtime":1614071343738,"results":"36","hashOfConfig":"23"},{"size":1153,"mtime":1613421820140,"results":"37","hashOfConfig":"23"},{"size":633,"mtime":1613407540403,"results":"38","hashOfConfig":"23"},{"size":560,"mtime":1613508471307,"results":"39","hashOfConfig":"23"},{"size":1544,"mtime":1613425720338,"results":"40","hashOfConfig":"23"},{"size":677,"mtime":1614065189039,"results":"41","hashOfConfig":"23"},{"size":1239,"mtime":1613315841351,"results":"42","hashOfConfig":"23"},{"size":674,"mtime":1613306005723,"results":"43","hashOfConfig":"23"},{"size":1485,"mtime":1613461005118,"results":"44","hashOfConfig":"23"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"eryn7a",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"djguxm",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"47"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"47"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"47"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"47"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"47"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"47"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\index.tsx",[],["94","95"],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\App.tsx",[],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\reportWebVitals.ts",[],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\reusables\\DynamicStuff.tsx",[],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\navbar\\Navbar.tsx",[],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\hourly\\Hourly.tsx",["96"],"import React, { useEffect, useState } from 'react'\r\nimport { Day, DaySelected } from '../../../reusables/DynHourly';\r\nimport './x-hourly.sass'\r\n\r\nfunction Hourly({ YOUR_API_KEY, city }) {\r\n  const [weatherLocationToday, setWeatherLocationToday]: any = useState([])\r\n  const [weatherLocationTom, setWeatherLocationTom]: any = useState([])\r\n  const [weatherLocationNext, setWeatherLocationNext]: any = useState([])\r\n  const [listOpenById, setListOpenById] = useState<number>(null)\r\n  const [accessor, setAccessor] = useState(0)\r\n  const [number, setNumber] = useState(0)\r\n\r\n  const weekThree = `https://api.weatherapi.com/v1/forecast.json?key=${YOUR_API_KEY}&q=${city}&days=7`\r\n\r\n  async function weather() {\r\n    const fetchedWeather = await fetch(weekThree)\r\n    const data = await fetchedWeather.json()\r\n    setWeatherLocationToday(data.forecast && data.forecast.forecastday[0].hour)\r\n    setWeatherLocationTom(data.forecast && data.forecast.forecastday[1].hour)\r\n    setWeatherLocationNext(data.forecast && data.forecast.forecastday[2].hour)\r\n  }\r\n\r\n  useEffect(() => {\r\n    weather()\r\n  }, [city])\r\n\r\n  const dayData = [\r\n    { state: weatherLocationToday, number: 0 },\r\n    { state: weatherLocationTom, number: 1 },\r\n    { state: weatherLocationNext, number: 2 }\r\n  ]\r\n\r\n  const selData = [\r\n    { day: 'Today', number: 0 },\r\n    { day: 'Tomorrow', number: 1 },\r\n    { day: 'Day-After', number: 2 },\r\n  ]\r\n\r\n  return (\r\n    <div id='Hourly'>\r\n      <div className='hourlyContainerOuter'>\r\n        {selData.map((item, id) =>\r\n          <DaySelected\r\n            id={id}\r\n            selData={item}\r\n            number={number}\r\n            setNumber={setNumber}\r\n            setAccessor={setAccessor}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      {dayData.map((item) =>\r\n        <Day\r\n          dayData={item}\r\n          accessor={accessor}\r\n          setListOpenById={setListOpenById}\r\n          listOpenById={listOpenById}\r\n        />\r\n      )}\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default Hourly\r\n","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\index.tsx",["97","98"],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\daily\\Daily.tsx",["99"],"import React, { useEffect, useState } from 'react'\r\nimport DailyInfo from './info/DailyInfo'\r\nimport './x-daily.sass'\r\nimport AOS from 'aos';\r\nimport 'aos/dist/aos.css';\r\nAOS.init({\r\n  once: true\r\n});\r\n\r\nfunction Daily({ city, YOUR_API_KEY }) {\r\n  const [weatherForecast, setWeatherForecast]: any = useState([])\r\n\r\n  const weekThree = `https://api.weatherapi.com/v1/forecast.json?key=${YOUR_API_KEY}&q=${city}&days=7`\r\n\r\n  async function weather() {\r\n    const fetchedWeatherData = await fetch(weekThree)\r\n    const data = await fetchedWeatherData.json()\r\n    setWeatherForecast(data.forecast && data.forecast.forecastday)\r\n  }\r\n\r\n  const stylesArray: any = ['daily-container1', 'daily-container2', 'daily-container3']\r\n\r\n  useEffect(() => {\r\n    weather()\r\n  }, [city])\r\n\r\n  return (\r\n    <div className='daily-position' id='Daily'>\r\n      <p className='daily-top-header' data-aos=\"fade-up\">The Next Three Days...</p>\r\n\r\n      <div className='daily-outer-container' data-aos=\"fade-left\">\r\n        {weatherForecast && weatherForecast.map((item, id) =>\r\n          <div className={stylesArray[id]}>\r\n            <div className='daily-header'>\r\n              <p className='daily-date'>{item.date}</p>\r\n              <img src={item.day.condition.icon} className='day-icon' alt=\"dad\" />\r\n              <p className='daily-desc'>{item.day.condition.text}</p>\r\n            </div>\r\n\r\n            <DailyInfo item={item} />\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Daily\r\n","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\current\\Current.tsx",["100"],"import React, { useEffect, useState } from 'react'\r\nimport CurrentTitle from './info/CurrentTitle'\r\nimport './x-current.sass'\r\nimport CurrentInfo from './info/CurrentInfo'\r\nimport Circle from './circle/Circle'\r\n\r\nfunction Current({ YOUR_API_KEY, city }) {\r\n  const [weatherCurrent, setWeatherCurrent]: any = useState([])\r\n  const [weatherPhase, setWeatherPhase]: any = useState([])\r\n  const [weatherIcon, setWeatherIcon]: any = useState([])\r\n\r\n  const current = `https://api.weatherapi.com/v1/current.json?key=${YOUR_API_KEY}&q=${city}`\r\n  const weekThree = `https://api.weatherapi.com/v1/forecast.json?key=${YOUR_API_KEY}&q=${city}&days=7`\r\n\r\n  async function weather() {\r\n    const fetchedWeatherData = await fetch(current)\r\n    const data = await fetchedWeatherData.json()\r\n    setWeatherCurrent(data && data.current) \r\n    setWeatherIcon(data.current && data.current.condition)\r\n  }\r\n\r\n  async function weather2nd() {\r\n    const fetchedWeatherData = await fetch(weekThree)\r\n    const data = await fetchedWeatherData.json()\r\n    setWeatherPhase(data.forecast && data.forecast.forecastday[0].astro)\r\n  }\r\n\r\n  useEffect(() => {\r\n    weather()\r\n    weather2nd()\r\n  }, [city])\r\n\r\n  return (\r\n\r\n    <div className='current-section' id='Today'>\r\n      <div className='current-container'> \r\n        <p className='current-header'>Today</p> \r\n        <div className='current-info'>\r\n          <CurrentTitle />\r\n   \r\n          <CurrentInfo\r\n            weatherCurrent={weatherCurrent}\r\n            weatherPhase={weatherPhase}\r\n          /> \r\n          {/* //? weatherCurrent.description is commented in both */} \r\n        </div>\r\n      </div>\r\n \r\n      <Circle\r\n        weatherCurrent={weatherCurrent}\r\n        weatherIcon={weatherIcon}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Current\r\n","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\reusables\\DynHourly.tsx",[],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\hourly\\overview\\OverviewData.tsx",["101"],"import React from 'react'\r\nimport MoreData from './more/MoreData'\r\nimport { ImDroplet } from 'react-icons/im'\r\nimport { WiDayRainMix } from 'react-icons/wi'\r\nimport './x-overview.sass'\r\nimport './x-oItems.sass'\r\n\r\nfunction OverviewData({ item, id, setListOpenById, listOpenById }) {\r\n\r\n  const time = [\r\n    '12AM', '1AM', '2AM', '3AM', '4AM', '5AM',\r\n    '6AM', '7AM', '8AM', '9AM', '10AM', '11AM',\r\n    '12PM', '1PM', '2PM', '3PM', '4PM', '5PM',\r\n    '6PM', '7PM', '8PM', '9PM', '10PM', '11PM'\r\n  ]\r\n\r\n  return (\r\n    <div key={id} data-aos={id % 2 == 0 ? \"fade-left\" : \"fade-right\"} className='hour-container-center'>\r\n      <div\r\n        className='overview-container'\r\n        onClick={() =>\r\n          listOpenById === id ?\r\n            setListOpenById(null) :\r\n            setListOpenById(id)}\r\n      >\r\n        <p className='o-time'>{time[id]}</p>\r\n        <div className='iconsWeather'>\r\n          <img src={item.condition.icon} className='o-icon' alt=\"weather icon\" />\r\n        </div>\r\n        <WiDayRainMix className='iconsWeather' size={1} />\r\n        <p className='o-temp'>{item.temp_f}F°</p>\r\n        <p className='o-feelslike'>Feels Like {item.feelslike_f}F°</p>\r\n        <p className='o-text'>{item.condition.text}</p>\r\n        <p className='o-rain'>{item.chance_of_rain}% <ImDroplet /></p>\r\n      </div>\r\n\r\n      <div className={`more-data ${listOpenById === id ?\r\n        'more-data-open' : 'more-data'}`}>\r\n\r\n        {/* //* On open  */}\r\n        <MoreData item={item} id={id} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OverviewData\r\n","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\hourly\\overview\\more\\MoreData.tsx",[],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\daily\\info\\DailyInfo.tsx",["102"],"import React from 'react'\r\nimport './o-dailyInfo.sass'\r\nimport AOS from 'aos';\r\nimport 'aos/dist/aos.css';\r\n\r\nfunction DailyInfo({item}) {\r\n  return (\r\n    <div className='info-container' data-aos=\"zoom-in\">\r\n      <div className='daily-items-width'>\r\n        <p>Humidity:</p>\r\n        <p>Visability:</p>\r\n        <p>Min:</p>\r\n        <p>Max:</p>\r\n        <p>Rain:</p>\r\n        <p>Wind Speed:</p>\r\n        <p>Precipitation:</p> \r\n      </div> \r\n\r\n      <div className='daily-info-p'> \r\n        <p>{item.day.avghumidity}%</p>\r\n        <p>{item.day.avgvis_miles}miles </p>\r\n        <p>{item.day.mintemp_f}F°</p>\r\n        <p>{item.day.maxtemp_f}F°</p>\r\n        <p>{item.day.daily_chance_of_rain}%</p>\r\n        <p>{item.day.maxwind_mph}mph</p>\r\n        <p>{item.day.totalprecip_in}in.</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DailyInfo\r\n","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\current\\info\\CurrentInfo.tsx",[],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\current\\info\\CurrentTitle.tsx",[],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\current\\circle\\Circle.tsx",[],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\top-section\\search-bar\\SearchBar.tsx",["103"],"import React, { useEffect, useRef } from 'react'\r\nimport './x-search.sass'\r\nimport './x-dropdown-menu.sass'\r\n\r\nfunction ImageSection({ weather, setCity, setIsModal, city, area, isModal }) {\r\n  const inputRef = useRef()\r\n  const buttonRef = useRef()\r\n\r\n  const focusButton = (buttonRef) => {\r\n    buttonRef.current.focus()\r\n    setIsModal(false)\r\n  }\r\n\r\n  const focusInput = (inputRef) => {\r\n    inputRef.current.focus()\r\n    setIsModal(true)\r\n  }\r\n\r\n  useEffect(() => {\r\n    focusInput(inputRef)\r\n  }, [])\r\n\r\n  return (\r\n    <div className='search-container' >\r\n      <div >\r\n        <input\r\n          type=\"text\"\r\n          value={city}\r\n          ref={inputRef}\r\n          onClick={() => setIsModal(true)}\r\n          className='long-input'\r\n          placeholder='enter city'\r\n          onChange={(e) => setCity(e.target.value)}\r\n        />\r\n        <div className='input-dropdown'>\r\n          {area.length >= 3 && isModal &&\r\n            area.map((item) =>\r\n              <div onClick={() => {\r\n                setCity(item.name)\r\n                weather()\r\n                focusButton(buttonRef)\r\n              }}\r\n                className='possible-locations-btn'>\r\n                {item.name}\r\n              </div>\r\n            )}\r\n        </div>\r\n        {area.length <= 3 &&\r\n          <p className='error-length'>not enough letters</p>}\r\n        <button ref={buttonRef} onClick={() => {\r\n          weather()\r\n          setIsModal(false)\r\n        }}>search</button>\r\n      </div>\r\n\r\n\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default ImageSection","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\top-section\\image-section\\ImageSection.tsx",["104","105"],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\navbar\\resultions\\MobileNav.tsx",[],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\navbar\\resultions\\DesktopNav.tsx",[],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\pineapples\\PineApples.tsx",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":25,"column":6,"nodeType":"112","endLine":25,"endColumn":12,"suggestions":"113"},{"ruleId":"114","severity":1,"message":"115","line":9,"column":8,"nodeType":"116","messageId":"117","endLine":9,"endColumn":18},{"ruleId":"110","severity":1,"message":"118","line":46,"column":6,"nodeType":"112","endLine":46,"endColumn":12,"suggestions":"119"},{"ruleId":"110","severity":1,"message":"111","line":25,"column":6,"nodeType":"112","endLine":25,"endColumn":12,"suggestions":"120"},{"ruleId":"110","severity":1,"message":"121","line":31,"column":6,"nodeType":"112","endLine":31,"endColumn":12,"suggestions":"122"},{"ruleId":"123","severity":1,"message":"124","line":18,"column":36,"nodeType":"125","messageId":"126","endLine":18,"endColumn":38},{"ruleId":"114","severity":1,"message":"127","line":3,"column":8,"nodeType":"116","messageId":"117","endLine":3,"endColumn":11},{"ruleId":"110","severity":1,"message":"128","line":21,"column":6,"nodeType":"112","endLine":21,"endColumn":8,"suggestions":"129"},{"ruleId":"114","severity":1,"message":"130","line":1,"column":17,"nodeType":"116","messageId":"117","endLine":1,"endColumn":26},{"ruleId":"114","severity":1,"message":"131","line":1,"column":28,"nodeType":"116","messageId":"117","endLine":1,"endColumn":36},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'weather'. Either include it or remove the dependency array.","ArrayExpression",["134"],"@typescript-eslint/no-unused-vars","'PineApples' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'places' and 'weather'. Either include them or remove the dependency array.",["135"],["136"],"React Hook useEffect has missing dependencies: 'weather' and 'weather2nd'. Either include them or remove the dependency array.",["137"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'AOS' is defined but never used.","React Hook useEffect has a missing dependency: 'focusInput'. Either include it or remove the dependency array.",["138"],"'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"139","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},"Update the dependencies array to be: [city, weather]",{"range":"148","text":"149"},"Update the dependencies array to be: [city, places, weather]",{"range":"150","text":"151"},{"range":"152","text":"149"},"Update the dependencies array to be: [city, weather, weather2nd]",{"range":"153","text":"154"},"Update the dependencies array to be: [focusInput]",{"range":"155","text":"156"},[1093,1099],"[city, weather]",[1539,1545],"[city, places, weather]",[763,769],[1168,1174],"[city, weather, weather2nd]",[502,504],"[focusInput]"]