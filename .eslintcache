[{"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\index.tsx":"1","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\App.tsx":"2","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\reportWebVitals.ts":"3","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\reusables\\DynamicStuff.tsx":"4","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\navbar\\Navbar.tsx":"5","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\hourly\\Hourly.tsx":"6","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\index.tsx":"7","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\daily\\Daily.tsx":"8","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\current\\Current.tsx":"9","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\reusables\\DynHourly.tsx":"10","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\hourly\\overview\\OverviewData.tsx":"11","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\hourly\\overview\\more\\MoreData.tsx":"12","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\daily\\info\\DailyInfo.tsx":"13","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\current\\info\\CurrentInfo.tsx":"14","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\current\\info\\CurrentTitle.tsx":"15","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\current\\circle\\Circle.tsx":"16","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\top-section\\search-bar\\SearchBar.tsx":"17","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\top-section\\image-section\\ImageSection.tsx":"18"},{"size":500,"mtime":1607295698333,"results":"19","hashOfConfig":"20"},{"size":197,"mtime":1610939140748,"results":"21","hashOfConfig":"20"},{"size":425,"mtime":1607295698333,"results":"22","hashOfConfig":"20"},{"size":401,"mtime":1610944223961,"results":"23","hashOfConfig":"20"},{"size":1293,"mtime":1611975385565,"results":"24","hashOfConfig":"20"},{"size":2015,"mtime":1612000873365,"results":"25","hashOfConfig":"20"},{"size":2387,"mtime":1611966984086,"results":"26","hashOfConfig":"20"},{"size":1772,"mtime":1611989395136,"results":"27","hashOfConfig":"20"},{"size":1731,"mtime":1611980482622,"results":"28","hashOfConfig":"20"},{"size":1334,"mtime":1612000845778,"results":"29","hashOfConfig":"20"},{"size":1430,"mtime":1612000958651,"results":"30","hashOfConfig":"20"},{"size":1247,"mtime":1611998849246,"results":"31","hashOfConfig":"20"},{"size":778,"mtime":1611990900300,"results":"32","hashOfConfig":"20"},{"size":1152,"mtime":1611980486759,"results":"33","hashOfConfig":"20"},{"size":631,"mtime":1611991432503,"results":"34","hashOfConfig":"20"},{"size":589,"mtime":1611979899396,"results":"35","hashOfConfig":"20"},{"size":1492,"mtime":1611976572070,"results":"36","hashOfConfig":"20"},{"size":606,"mtime":1611975740061,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"djguxm",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"40"},"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\index.tsx",[],["81","82"],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\App.tsx",[],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\reportWebVitals.ts",[],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\reusables\\DynamicStuff.tsx",[],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\navbar\\Navbar.tsx",["83","84"],"import React from 'react'\r\nimport { BsCloud } from 'react-icons/bs'\r\nimport './x-nav.sass'\r\nimport { Link, animateScroll as scroll } from \"react-scroll\";\r\nimport { FiMenu } from 'react-icons/fi'\r\n// import { useMediaQuery } from 'react-responsive';\r\n\r\n\r\n// const isMobile = useMediaQuery({ query: `(max-width: 760px)` });\r\n\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <div className=\"navBar\">\r\n      <div className='project-restrictions'>\r\n\r\n        <div className='nav-items'>\r\n          <div style={{ display: 'flex' }}>\r\n            <BsCloud size='30' color='#971414' strokeWidth='.5' />\r\n            <p className='nav-header'>QuickWeather</p>\r\n          </div>\r\n\r\n\r\n\r\n          {/* <FiMenu /> */}\r\n          <div className='buttonContainer'>\r\n            <Link className='scroll-link' to=\"Today\" spy={true} smooth={true} offset={-100} duration={500}>\r\n              Today\r\n            </Link>\r\n            <Link className='scroll-link' to=\"Hourly\" spy={true} smooth={true} offset={-100} duration={500}>\r\n              Hourly\r\n            </Link>\r\n            <Link className='scroll-link' to=\"Daily\" spy={true} smooth={true} offset={-250} duration={500}>\r\n              Daily\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\hourly\\Hourly.tsx",["85","86"],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\index.tsx",["87","88","89"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport Navbar from './navbar/Navbar';\r\nimport Current from './weather-info/current/Current';\r\nimport Daily from './weather-info/daily/Daily';\r\nimport Hourly from './weather-info/hourly/Hourly';\r\nimport SearchBar from './top-section/search-bar/SearchBar';\r\nimport ImageSection from './top-section/image-section/ImageSection';\r\nimport './index.sass'\r\nimport './top-section/search-bar/x-search.sass'\r\nimport './top-section/search-bar/x-dropdown-menu.sass'\r\n\r\nfunction Index() {\r\n  const [city, setCity]: any = useState('New York')\r\n  const [weatherLocation, setWeatherLocation]: any = useState([])\r\n  const [weatherCurrent, setWeatherCurrent]: any = useState([])\r\n  const [area, setArea]: any = useState([])\r\n  const [isModal, setIsModal] = useState(true)\r\n\r\n  const YOUR_API_KEY = '32902a43900f400cae0210316210701'\r\n  const commonNames = `http://api.weatherapi.com/v1/search.json?key=${YOUR_API_KEY}&q=${city}`\r\n  const current = `http://api.weatherapi.com/v1/current.json?key=${YOUR_API_KEY}&q=${city}`\r\n\r\n  async function weather() {\r\n    const fetchedWeatherData = await fetch(current)\r\n    const data = await fetchedWeatherData.json()\r\n    setWeatherLocation(data.location)\r\n    setWeatherCurrent(data.current)\r\n    console.log(data, 'weather')\r\n  }\r\n\r\n  async function places() {\r\n    const fetchedWeatherData = await fetch(commonNames)\r\n    const data = await fetchedWeatherData.json()\r\n    // const dataConcatenated = data.concat{}\r\n    setArea(data)\r\n    console.log(data, 'places')\r\n  }\r\n\r\n  useEffect(() => {\r\n    weather()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    places()\r\n  }, [city])\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n\r\n      <div className=\"project-container\">\r\n        <ImageSection\r\n          city={city}\r\n          weatherLocation={weatherLocation}\r\n          weatherCurrent={weatherCurrent}\r\n        />\r\n\r\n        <SearchBar\r\n          area={area}\r\n          city={city}\r\n          weather={weather}\r\n          setCity={setCity}\r\n          isModal={isModal}\r\n          setIsModal={setIsModal}\r\n        />\r\n\r\n        {/* //* TODAY */}\r\n        <Current city={city} YOUR_API_KEY={YOUR_API_KEY} />\r\n        {/* //*DAILY */}\r\n        <Daily YOUR_API_KEY={YOUR_API_KEY} />\r\n        {/* //*HOURLY */}\r\n        <Hourly YOUR_API_KEY={YOUR_API_KEY} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Index\r\n","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\daily\\Daily.tsx",["90"],"import React, { useEffect, useState } from 'react'\r\nimport { BsCloud } from 'react-icons/bs'\r\nimport DailyInfo from './info/DailyInfo'\r\nimport './x-daily.sass'\r\n\r\nfunction Daily({ YOUR_API_KEY }) {\r\n  const [weatherForecast, setWeatherForecast]: any = useState([])\r\n\r\n  const weekThree = `http://api.weatherapi.com/v1/forecast.json?key=${YOUR_API_KEY}&q=07112&days=7`\r\n\r\n  async function weather() {\r\n    const fetchedWeatherData = await fetch(weekThree)\r\n    const data = await fetchedWeatherData.json()\r\n    setWeatherForecast(data.forecast.forecastday)\r\n  }\r\n\r\n  // let days = ['']\r\n\r\n  // const locale = {\r\n  //   localize: {\r\n  //     month: n => months[n],\r\n  //     day: n => days[n]\r\n  //   }\r\n  // }\r\n  // let c = locale.getInstance()\r\n  // let closer = c.setTime(23 / 2 / 2010);\r\n  // let me = closer.get(Calendar.DAY_OF_WEEK);\r\n\r\n\r\n  // let days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n  // let d = new Date(weatherForecast.date);\r\n  // let dayName = days[d.getDay()]\r\n  // console.log(dayName, 'dayName')\r\n  // console.log(d, 'd')\r\n\r\n\r\n  useEffect(() => {\r\n    weather()\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className='daily-position' id='Daily'>\r\n      <p className='daily-top-header'>The Next Three Days...</p>\r\n\r\n      <div className='daily-outer-container'>\r\n        {weatherForecast && weatherForecast.map((item) =>\r\n          <div className='daily-container'>\r\n            <div className='daily-header'>\r\n              <p className='daily-date'>{item.date}</p>\r\n              <BsCloud color='white' size={40} />\r\n              <p>{item.day.condition.text}</p>\r\n            </div>\r\n\r\n            <DailyInfo item={item} />\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Daily\r\n","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\current\\Current.tsx",["91","92","93"],"import React, { useEffect, useState } from 'react'\r\nimport CurrentTitle from './info/CurrentTitle'\r\nimport { BsCloud } from 'react-icons/bs'\r\nimport './x-current.sass'\r\nimport CurrentInfo from './info/CurrentInfo'\r\nimport Circle from './circle/Circle'\r\n\r\nfunction Current({ YOUR_API_KEY, city }) {\r\n  const [weatherCurrent, setWeatherCurrent]: any = useState([])\r\n  const [weatherForcast, setWeatherForcast]: any = useState([])\r\n  const [weatherPhase, setWeatherPhase]: any = useState([])\r\n \r\n  const current = `http://api.weatherapi.com/v1/current.json?key=${YOUR_API_KEY}&q=${city}`\r\n  const weekThree = `http://api.weatherapi.com/v1/forecast.json?key=${YOUR_API_KEY}&q=07112&days=7`\r\n\r\n  async function weather() {\r\n    const fetchedWeatherData = await fetch(current)\r\n    const data = await fetchedWeatherData.json()\r\n    setWeatherCurrent(data.current)\r\n  }\r\n\r\n  async function weather2nd() {\r\n    const fetchedWeatherData = await fetch(weekThree)\r\n    const data = await fetchedWeatherData.json()\r\n    setWeatherForcast(data.forecast.current)\r\n    setWeatherPhase(data.forecast.forecastday[0].astro)\r\n  }\r\n\r\n  useEffect(() => {\r\n    weather()\r\n    weather2nd()\r\n  }, [])\r\n\r\n  return (\r\n\r\n    <div className='current-section' id='Today'>\r\n      <Circle weatherCurrent={weatherCurrent} />\r\n \r\n      <div className='current-container'> \r\n        <p className='current-header'>Today</p>\r\n        <div className='current-info'>\r\n          <CurrentTitle />\r\n\r\n          <CurrentInfo\r\n            weatherCurrent={weatherCurrent}\r\n            weatherPhase={weatherPhase}\r\n          />\r\n          {/* //? weatherCurrent.description is commented in both */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Current\r\n","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\reusables\\DynHourly.tsx",[],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\hourly\\overview\\OverviewData.tsx",["94"],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\hourly\\overview\\more\\MoreData.tsx",[],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\daily\\info\\DailyInfo.tsx",[],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\current\\info\\CurrentInfo.tsx",[],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\current\\info\\CurrentTitle.tsx",[],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\current\\circle\\Circle.tsx",[],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\top-section\\search-bar\\SearchBar.tsx",["95","96"],"import React, { useEffect, useRef } from 'react'\r\nimport './x-search.sass'\r\n\r\nfunction ImageSection({ weather, setCity, setIsModal, city, area, isModal }) {\r\n  const inputRef = useRef()\r\n  const buttonRef = useRef()\r\n\r\n  const focusButton = (buttonRef) => {\r\n    buttonRef.current.focus()\r\n    setIsModal(false)\r\n  }\r\n\r\n  const focusInput = (inputRef) => {\r\n    inputRef.current.focus()\r\n    setIsModal(true)\r\n  }\r\n\r\n  useEffect(() => {\r\n    focusInput(inputRef)\r\n  }, [])\r\n\r\n  return (\r\n    <div className='search-container' >\r\n      <div className='button--input'>\r\n        <input\r\n          type=\"text\"\r\n          value={city}\r\n          ref={inputRef}\r\n          onClick={() => setIsModal(true)}\r\n          className='long-input'\r\n          placeholder='enter city' \r\n          onChange={(e) => setCity(e.target.value)}\r\n        />\r\n        <button ref={buttonRef} onClick={() => {\r\n          weather()\r\n        }}>search</button>\r\n      </div>\r\n\r\n      {/* {area.length <= 3 &&\r\n        <p className='error-length'>not enough letters</p>}\r\n\r\n      <div className='input-dropdown'>\r\n        {area.length >= 3 && isModal &&\r\n          area.map((item) =>\r\n            <div onClick={() => {\r\n              weather()\r\n              setCity(item.name)\r\n              focusButton(buttonRef)\r\n            }}\r\n              className='possible-locations-btn'>\r\n              {item.name}\r\n            </div>\r\n          )} */}\r\n    {/* </div> */}\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default ImageSection","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\top-section\\image-section\\ImageSection.tsx",["97","98"],"import React, { useEffect, useState } from 'react'\r\nimport './x-imgSection.sass'\r\n\r\nfunction SearchBar({ weatherLocation, weatherCurrent, city }) {\r\n\r\n\r\n  return (\r\n    <div className=\"top-image\">\r\n      <div className=\"image-bg\">\r\n \r\n        <div className='top-container'>\r\n          <p className='top-name'>{weatherLocation && weatherLocation.name}</p>\r\n          <p className='top-local'>{weatherLocation && weatherLocation.localtime}</p>\r\n          <p className='top-temp'>{weatherCurrent && weatherCurrent.temp_f}F°</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBar\r\n",{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":4,"column":33,"nodeType":"105","messageId":"106","endLine":4,"endColumn":39},{"ruleId":"103","severity":1,"message":"107","line":5,"column":10,"nodeType":"105","messageId":"106","endLine":5,"endColumn":16},{"ruleId":"103","severity":1,"message":"108","line":9,"column":10,"nodeType":"105","messageId":"106","endLine":9,"endColumn":29},{"ruleId":"109","severity":1,"message":"110","line":26,"column":6,"nodeType":"111","endLine":26,"endColumn":8,"suggestions":"112"},{"ruleId":"103","severity":1,"message":"113","line":1,"column":28,"nodeType":"105","messageId":"106","endLine":1,"endColumn":34},{"ruleId":"109","severity":1,"message":"110","line":41,"column":6,"nodeType":"111","endLine":41,"endColumn":8,"suggestions":"114"},{"ruleId":"109","severity":1,"message":"115","line":45,"column":6,"nodeType":"111","endLine":45,"endColumn":12,"suggestions":"116"},{"ruleId":"109","severity":1,"message":"110","line":39,"column":6,"nodeType":"111","endLine":39,"endColumn":8,"suggestions":"117"},{"ruleId":"103","severity":1,"message":"118","line":3,"column":10,"nodeType":"105","messageId":"106","endLine":3,"endColumn":17},{"ruleId":"103","severity":1,"message":"119","line":10,"column":10,"nodeType":"105","messageId":"106","endLine":10,"endColumn":24},{"ruleId":"109","severity":1,"message":"120","line":32,"column":6,"nodeType":"111","endLine":32,"endColumn":8,"suggestions":"121"},{"ruleId":"103","severity":1,"message":"122","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":16},{"ruleId":"103","severity":1,"message":"123","line":8,"column":9,"nodeType":"105","messageId":"106","endLine":8,"endColumn":20},{"ruleId":"109","severity":1,"message":"124","line":20,"column":6,"nodeType":"111","endLine":20,"endColumn":8,"suggestions":"125"},{"ruleId":"103","severity":1,"message":"126","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":26},{"ruleId":"103","severity":1,"message":"127","line":1,"column":28,"nodeType":"105","messageId":"106","endLine":1,"endColumn":36},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"@typescript-eslint/no-unused-vars","'scroll' is defined but never used.","Identifier","unusedVar","'FiMenu' is defined but never used.","'weatherLocationDate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'weather'. Either include it or remove the dependency array.","ArrayExpression",["130"],"'useRef' is defined but never used.",["131"],"React Hook useEffect has a missing dependency: 'places'. Either include it or remove the dependency array.",["132"],["133"],"'BsCloud' is defined but never used.","'weatherForcast' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'weather' and 'weather2nd'. Either include them or remove the dependency array.",["134"],"'MoreData' is defined but never used.","'focusButton' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'focusInput'. Either include it or remove the dependency array.",["135"],"'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},{"desc":"136","fix":"138"},{"desc":"139","fix":"140"},{"desc":"136","fix":"141"},{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},"Update the dependencies array to be: [weather]",{"range":"146","text":"147"},{"range":"148","text":"147"},"Update the dependencies array to be: [city, places]",{"range":"149","text":"150"},{"range":"151","text":"147"},"Update the dependencies array to be: [weather, weather2nd]",{"range":"152","text":"153"},"Update the dependencies array to be: [focusInput]",{"range":"154","text":"155"},[1135,1137],"[weather]",[1599,1601],[1646,1652],"[city, places]",[1132,1134],[1173,1175],"[weather, weather2nd]",[469,471],"[focusInput]"]