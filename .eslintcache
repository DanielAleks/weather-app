[{"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\index.tsx":"1","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\App.tsx":"2","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\reportWebVitals.ts":"3","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\reusables\\DynamicStuff.tsx":"4","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\navbar\\Navbar.tsx":"5","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\hourly\\Hourly.tsx":"6","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\index.tsx":"7","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\daily\\Daily.tsx":"8","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\current\\Current.tsx":"9","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\reusables\\DynHourly.tsx":"10","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\hourly\\overview\\OverviewData.tsx":"11","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\hourly\\overview\\more\\MoreData.tsx":"12","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\daily\\info\\DailyInfo.tsx":"13","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\current\\info\\CurrentInfo.tsx":"14","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\current\\info\\CurrentTitle.tsx":"15","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\current\\circle\\Circle.tsx":"16","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\top-section\\search-bar\\SearchBar.tsx":"17","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\top-section\\image-section\\ImageSection.tsx":"18","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\navbar\\resultions\\MobileNav.tsx":"19","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\navbar\\resultions\\DesktopNav.tsx":"20"},{"size":500,"mtime":1607295698333,"results":"21","hashOfConfig":"22"},{"size":321,"mtime":1612176369177,"results":"23","hashOfConfig":"22"},{"size":425,"mtime":1607295698333,"results":"24","hashOfConfig":"22"},{"size":401,"mtime":1610944223961,"results":"25","hashOfConfig":"26"},{"size":1461,"mtime":1613276906615,"results":"27","hashOfConfig":"22"},{"size":2083,"mtime":1613290383556,"results":"28","hashOfConfig":"22"},{"size":2239,"mtime":1612330532685,"results":"29","hashOfConfig":"22"},{"size":1327,"mtime":1612246716725,"results":"30","hashOfConfig":"22"},{"size":1886,"mtime":1613301153126,"results":"31","hashOfConfig":"22"},{"size":1155,"mtime":1613290366899,"results":"32","hashOfConfig":"22"},{"size":1526,"mtime":1613281628184,"results":"33","hashOfConfig":"22"},{"size":1612,"mtime":1613280069619,"results":"34","hashOfConfig":"22"},{"size":778,"mtime":1611990900300,"results":"35","hashOfConfig":"22"},{"size":1152,"mtime":1611980486759,"results":"36","hashOfConfig":"22"},{"size":631,"mtime":1611991432503,"results":"37","hashOfConfig":"22"},{"size":597,"mtime":1613291072554,"results":"38","hashOfConfig":"22"},{"size":1542,"mtime":1612246767256,"results":"39","hashOfConfig":"22"},{"size":1799,"mtime":1612329401764,"results":"40","hashOfConfig":"22"},{"size":1239,"mtime":1612174920540,"results":"41","hashOfConfig":"22"},{"size":726,"mtime":1612173085452,"results":"42","hashOfConfig":"22"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"eryn7a",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"djguxm",{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"45"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"45"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"45"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"45"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"45"},"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\index.tsx",[],["90","91"],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\App.tsx",[],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\reportWebVitals.ts",[],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\reusables\\DynamicStuff.tsx",[],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\navbar\\Navbar.tsx",["92"],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\hourly\\Hourly.tsx",["93","94"],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\index.tsx",["95","96","97"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport Navbar from './navbar/Navbar';\r\nimport Current from './weather-info/current/Current';\r\nimport Daily from './weather-info/daily/Daily';\r\nimport Hourly from './weather-info/hourly/Hourly';\r\nimport SearchBar from './top-section/search-bar/SearchBar';\r\nimport ImageSection from './top-section/image-section/ImageSection';\r\nimport './index.sass'\r\n\r\nfunction Index() {\r\n  const [city, setCity]: any = useState('New York')\r\n  const [weatherLocation, setWeatherLocation]: any = useState([])\r\n  const [weatherCurrent, setWeatherCurrent]: any = useState([])\r\n  const [area, setArea]: any = useState([])\r\n  const [isModal, setIsModal] = useState(true)\r\n\r\n  const YOUR_API_KEY = '32902a43900f400cae0210316210701'\r\n  const commonNames = `http://api.weatherapi.com/v1/search.json?key=${YOUR_API_KEY}&q=${city}`\r\n  const current = `http://api.weatherapi.com/v1/current.json?key=${YOUR_API_KEY}&q=${city}`\r\n\r\n  async function weather() {\r\n    const fetchedWeatherData = await fetch(current)\r\n    const data = await fetchedWeatherData.json()\r\n    setWeatherLocation(data.location)\r\n    setWeatherCurrent(data.current)\r\n    console.log(data, 'weather')\r\n  }\r\n\r\n  async function places() {\r\n    const fetchedWeatherData = await fetch(commonNames)\r\n    const data = await fetchedWeatherData.json()\r\n    setArea(data)\r\n    console.log(data, 'places')\r\n  }\r\n\r\n  useEffect(() => {\r\n    weather()\r\n  }, [city])\r\n\r\n  useEffect(() => {\r\n    places()\r\n  }, [city])\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n\r\n      <div className=\"project-container\">\r\n        <ImageSection\r\n          city={city}\r\n          weatherLocation={weatherLocation}\r\n          weatherCurrent={weatherCurrent}\r\n        />\r\n\r\n        <SearchBar\r\n          area={area}\r\n          city={city}\r\n          weather={weather}\r\n          setCity={setCity}\r\n          isModal={isModal}\r\n          setIsModal={setIsModal}\r\n        />\r\n\r\n        {/* //* TODAY */}\r\n        <Current city={city} YOUR_API_KEY={YOUR_API_KEY} />\r\n        {/* //*DAILY */}\r\n        <Daily YOUR_API_KEY={YOUR_API_KEY} />\r\n        {/* //*HOURLY */}\r\n        <Hourly YOUR_API_KEY={YOUR_API_KEY} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Index\r\n","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\daily\\Daily.tsx",["98","99"],"import React, { useEffect, useState } from 'react'\r\nimport { BsCloud } from 'react-icons/bs'\r\nimport DailyInfo from './info/DailyInfo'\r\nimport './x-daily.sass'\r\n\r\nfunction Daily({ YOUR_API_KEY }) {\r\n  const [weatherForecast, setWeatherForecast]: any = useState([])\r\n\r\n  const weekThree = `http://api.weatherapi.com/v1/forecast.json?key=${YOUR_API_KEY}&q=07112&days=7`\r\n\r\n  async function weather() {\r\n    const fetchedWeatherData = await fetch(weekThree)\r\n    const data = await fetchedWeatherData.json()\r\n    setWeatherForecast(data.forecast.forecastday)\r\n    console.log(data, 'current working on Now') \r\n  }\r\n\r\n  useEffect(() => {\r\n    weather()\r\n  }, [])\r\n\r\n  return (\r\n    <div className='daily-position' id='Daily'>\r\n      <p className='daily-top-header'>The Next Three Days...</p>\r\n\r\n      <div className='daily-outer-container'>\r\n        {weatherForecast && weatherForecast.map((item) => \r\n          <div className='daily-container'>\r\n            <div className='daily-header'>\r\n              <p className='daily-date'>{item.date}</p>\r\n              <img src={item.day.condition.icon} className='day-icon' alt=\"dad\" />\r\n              <p>{item.day.condition.text}</p>\r\n            </div>\r\n\r\n            <DailyInfo item={item} />\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Daily\r\n","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\current\\Current.tsx",["100","101","102"],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\reusables\\DynHourly.tsx",["103"],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\hourly\\overview\\OverviewData.tsx",["104"],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\hourly\\overview\\more\\MoreData.tsx",[],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\daily\\info\\DailyInfo.tsx",[],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\current\\info\\CurrentInfo.tsx",[],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\current\\info\\CurrentTitle.tsx",[],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\weather-info\\current\\circle\\Circle.tsx",["105"],"C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\top-section\\search-bar\\SearchBar.tsx",["106"],"import React, { useEffect, useRef } from 'react'\r\nimport './x-search.sass'\r\nimport './x-dropdown-menu.sass'\r\n\r\nfunction ImageSection({ weather, setCity, setIsModal, city, area, isModal }) {\r\n  const inputRef = useRef()\r\n  const buttonRef = useRef()\r\n\r\n  const focusButton = (buttonRef) => {\r\n    buttonRef.current.focus()\r\n    setIsModal(false)\r\n  }\r\n\r\n  const focusInput = (inputRef) => {\r\n    inputRef.current.focus()\r\n    setIsModal(true)\r\n  }\r\n\r\n  useEffect(() => {\r\n    focusInput(inputRef)\r\n  }, [])\r\n \r\n  return (\r\n    <div className='search-container' >\r\n      <div className='button--input'>\r\n        <input\r\n          type=\"text\"\r\n          value={city}\r\n          ref={inputRef}\r\n          onClick={() => setIsModal(true)}\r\n          className='long-input'\r\n          placeholder='enter city'\r\n          onChange={(e) => setCity(e.target.value)}\r\n        />\r\n        {area.length <= 3 &&\r\n          <p className='error-length'>not enough letters</p>}\r\n        <button ref={buttonRef} onClick={() => {\r\n          weather()\r\n          setIsModal(false)\r\n        }}>search</button>\r\n      </div>\r\n\r\n      <div className='input-dropdown'>\r\n        {area.length >= 3 && isModal &&\r\n          area.map((item) =>\r\n            <div onClick={() => {\r\n              setCity(item.name)\r\n              weather()\r\n              focusButton(buttonRef)\r\n            }}\r\n              className='possible-locations-btn'>\r\n              {item.name}\r\n            </div>\r\n          )}\r\n      </div>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default ImageSection","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\top-section\\image-section\\ImageSection.tsx",["107"],"import React, { useEffect, useState } from 'react'\r\nimport './x-imgSection.sass'\r\n\r\nfunction SearchBar({ weatherLocation, weatherCurrent, city }) {\r\n  const [imageDisplay, setImageDisplay]: any = useState([])\r\n\r\n  async function placesImage() {\r\n    const apikey = 'AIzaSyB2xvlwMVlw0xW0C1hL_0A8-lNotiNRClM'\r\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\n    // const client = 'UY21H3DQEWPDQHH23GN43VXGTQUMNHWZLON5HJP5TXGNJK2L'\r\n    // const secret = '05HJZRAZCZXJV0WHPWOKM5TOANHEYUOLAFJHDRX5ZXUH1GZD'\r\n    // const placeHttp = `https://api.foursquare.com/v2/venues/explore/?near=Shibuya&venuePhotos=1&section=food&client_id=${client}&client_secret=${secret}&v=20131124`\r\n    const placesHttp = `https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photoreference=CnRvAAAAwMpdHeWlXl-lH0vp7lez4znKPIWSWvgvZFISdKx45AwJVP1Qp37YOrH7sqHMJ8C-vBDC546decipPHchJhHZL94RcTUfPa1jWzo-rSHaTlbNtjh-N68RkcToUCuY9v2HNpo5mziqkir37WU8FJEqVBIQ4k938TI3e7bf8xq-uwDZcxoUbO_ZJzPxremiQurAYzCTwRhE_V0&sensor=false&key=${apikey}`\r\n    const fetchedWeather = await fetch(placesHttp)\r\n    const data = await fetchedWeather.json()\r\n    setImageDisplay(data)\r\n    console.log(data)\r\n  }\r\n\r\n  useEffect(() => {\r\n    placesImage()\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"top-image\">\r\n      <div className=\"image-bg\">  \r\n        <img src={imageDisplay} alt=\"\" />\r\n        {/* {imageDisplay} */}\r\n        <div className='top-container'>\r\n          <p className='top-name'>{weatherLocation && weatherLocation.name}</p>\r\n          <p className='top-local'>{weatherLocation && weatherLocation.localtime}</p>\r\n          <p className='top-temp'>{weatherCurrent && weatherCurrent.temp_f}F°</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBar\r\n","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\navbar\\resultions\\MobileNav.tsx",["108"],"import React from 'react'\r\nimport { FiMenu } from 'react-icons/fi';\r\nimport { Link, animateScroll as scroll } from \"react-scroll\";\r\nimport './x-mobile-modal.sass'\r\n\r\nfunction MobileNav({ setLinkModal, linkModal, width, close }) {\r\n  return (\r\n    <>\r\n      {width < 700 &&\r\n        <FiMenu\r\n          strokeWidth={2}\r\n          size={width < 600 ? 16 : 18}\r\n          className='menu-position'\r\n          onClick={() => setLinkModal(true)}\r\n        />\r\n      }\r\n      {linkModal &&\r\n        <div className='modal'>\r\n          <div className='close-modal-out' onClick={close} />\r\n          <div className='items-scroll'>\r\n            <Link className='scroll-link-M' onClick={close} to=\"Today\" spy={true} smooth={true} offset={-100} duration={500}>\r\n              <p>Today</p>\r\n            </Link>\r\n            <Link className='scroll-link-M' onClick={close} to=\"Hourly\" spy={true} smooth={true} offset={-100} duration={500}>\r\n              <p>Hourly</p>\r\n            </Link>\r\n            <Link className='scroll-link-M' onClick={close} to=\"Daily\" spy={true} smooth={true} offset={-250} duration={500}>\r\n              <p>Daily</p>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MobileNav\r\n","C:\\Users\\denni\\Documents\\code\\weatherApp\\src\\components\\navbar\\resultions\\DesktopNav.tsx",["109"],"import React from 'react'\r\nimport { Link, animateScroll as scroll } from \"react-scroll\";\r\n\r\nfunction DesktopNav({ width }) {\r\n  return (\r\n    <>\r\n      {width > 700 &&\r\n        <div className='buttonContainer'>\r\n          <Link className='scroll-link' to=\"Today\" spy={true} smooth={true} offset={-100} duration={500}>\r\n            Today\r\n            </Link>\r\n          <Link className='scroll-link' to=\"Hourly\" spy={true} smooth={true} offset={-100} duration={500}>\r\n            Hourly\r\n            </Link>\r\n          <Link className='scroll-link' to=\"Daily\" spy={true} smooth={true} offset={-250} duration={500}>\r\n            Daily\r\n            </Link>\r\n        </div>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DesktopNav\r\n",{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":23,"column":17,"nodeType":"116","messageId":"117","endLine":23,"endColumn":23},{"ruleId":"114","severity":1,"message":"118","line":9,"column":10,"nodeType":"116","messageId":"117","endLine":9,"endColumn":29},{"ruleId":"119","severity":1,"message":"120","line":27,"column":6,"nodeType":"121","endLine":27,"endColumn":8,"suggestions":"122"},{"ruleId":"114","severity":1,"message":"123","line":1,"column":28,"nodeType":"116","messageId":"117","endLine":1,"endColumn":34},{"ruleId":"119","severity":1,"message":"120","line":38,"column":6,"nodeType":"121","endLine":38,"endColumn":12,"suggestions":"124"},{"ruleId":"119","severity":1,"message":"125","line":42,"column":6,"nodeType":"121","endLine":42,"endColumn":12,"suggestions":"126"},{"ruleId":"114","severity":1,"message":"127","line":2,"column":10,"nodeType":"116","messageId":"117","endLine":2,"endColumn":17},{"ruleId":"119","severity":1,"message":"120","line":20,"column":6,"nodeType":"121","endLine":20,"endColumn":8,"suggestions":"128"},{"ruleId":"114","severity":1,"message":"127","line":3,"column":10,"nodeType":"116","messageId":"117","endLine":3,"endColumn":17},{"ruleId":"114","severity":1,"message":"129","line":10,"column":10,"nodeType":"116","messageId":"117","endLine":10,"endColumn":24},{"ruleId":"119","severity":1,"message":"130","line":34,"column":6,"nodeType":"121","endLine":34,"endColumn":8,"suggestions":"131"},{"ruleId":"114","severity":1,"message":"132","line":1,"column":10,"nodeType":"116","messageId":"117","endLine":1,"endColumn":18},{"ruleId":"114","severity":1,"message":"132","line":1,"column":17,"nodeType":"116","messageId":"117","endLine":1,"endColumn":25},{"ruleId":"114","severity":1,"message":"127","line":2,"column":10,"nodeType":"116","messageId":"117","endLine":2,"endColumn":17},{"ruleId":"119","severity":1,"message":"133","line":21,"column":6,"nodeType":"121","endLine":21,"endColumn":8,"suggestions":"134"},{"ruleId":"114","severity":1,"message":"135","line":9,"column":11,"nodeType":"116","messageId":"117","endLine":9,"endColumn":19},{"ruleId":"114","severity":1,"message":"136","line":3,"column":33,"nodeType":"116","messageId":"117","endLine":3,"endColumn":39},{"ruleId":"114","severity":1,"message":"136","line":2,"column":33,"nodeType":"116","messageId":"117","endLine":2,"endColumn":39},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"@typescript-eslint/no-unused-vars","'height' is assigned a value but never used.","Identifier","unusedVar","'weatherLocationDate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'weather'. Either include it or remove the dependency array.","ArrayExpression",["139"],"'useRef' is defined but never used.",["140"],"React Hook useEffect has a missing dependency: 'places'. Either include it or remove the dependency array.",["141"],"'BsCloud' is defined but never used.",["142"],"'weatherForcast' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'weather' and 'weather2nd'. Either include them or remove the dependency array.",["143"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'focusInput'. Either include it or remove the dependency array.",["144"],"'proxyurl' is assigned a value but never used.","'scroll' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"145","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},"Update the dependencies array to be: [weather]",{"range":"156","text":"157"},"Update the dependencies array to be: [city, weather]",{"range":"158","text":"159"},"Update the dependencies array to be: [city, places]",{"range":"160","text":"161"},{"range":"162","text":"157"},"Update the dependencies array to be: [weather, weather2nd]",{"range":"163","text":"164"},"Update the dependencies array to be: [focusInput]",{"range":"165","text":"166"},[1179,1181],"[weather]",[1447,1453],"[city, weather]",[1498,1504],"[city, places]",[655,657],[1276,1278],"[weather, weather2nd]",[502,504],"[focusInput]"]